package departmentmanager;

import designcomponent.ImageAvatar;
import designcomponent.WrapLayout;
import java.awt.BorderLayout;
import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.List;
import javaasg.Profile;
import javaasg.login.logintest;
import javax.swing.ImageIcon;
import menunew.MenuEvent;
import raven.toast.Notifications;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author acer
 */
public class DepartmentMng extends javax.swing.JFrame {

    /**
     * Creates new form DepartmentMng
     */
    public DepartmentMng() {
        initComponents();
        panel.setLayout(new WrapLayout(WrapLayout.LEFT, 20, 20));
        //icon = new ImageAvatar();
        seticonmain();
        displayp();
        
        menu.setEvent(new MenuEvent(){
            @Override
            public void selected(int index, int subIndex) {
                if (index == 0){
                    //showForm(new DepartmentMng());
                    displayp();
                } else if (index == 1){
                    if (subIndex == 1){
                        showForm(new all_leave());
                    }else if (subIndex == 3){
                        showForm(new Approved());
                    }else if (subIndex == 2){
                        showForm(new Rejected());
                    }
                }
                
                
            }
            
        });
    }
    
    private void showForm(Component pane){
        panel.removeAll();
        panel.add(pane, BorderLayout.CENTER);
        panel.add(pane);
        panel.repaint();
        panel.revalidate();
    } 

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLayeredPane1 = new javax.swing.JLayeredPane();
        jLabel1 = new javax.swing.JLabel();
        icon = new designcomponent.ImageAvatar();
        jScrollPane1 = new javax.swing.JScrollPane();
        panel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        menu = new menunew.Menu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLayeredPane1.setBackground(new java.awt.Color(93, 12, 29));
        jLayeredPane1.setOpaque(true);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaasg/image/newlogo - Copy.png"))); // NOI18N

        icon.setBackground(new java.awt.Color(93, 12, 29));
        icon.setBorderSize(0);
        icon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                iconMouseClicked(evt);
            }
        });

        jLayeredPane1.setLayer(jLabel1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(icon, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(icon, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(icon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        panel.setBackground(new java.awt.Color(242, 237, 229));
        panel.setLayout(new java.awt.BorderLayout());
        jScrollPane1.setViewportView(panel);

        jScrollPane2.setViewportView(menu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1145, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 550, Short.MAX_VALUE)
                    .addComponent(jScrollPane2)))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    
    
    public List<String[]> readleave(){
        String leavecsv = "C:\\Users\\acer\\Documents\\NetBeansProjects\\JavaAsg\\src\\csv\\leave_applications.csv";
        
        List<String[]> csvData = new ArrayList<>();
        
        try (BufferedReader br = new BufferedReader(new FileReader(leavecsv))) {
            String line;
            boolean isFirstLine = true;
            
            while ((line = br.readLine()) != null) {
                String[] field = line.split(",");
                if (isFirstLine) {
                    isFirstLine = false;
                    continue; 
                }
                
                if (field[5].equals("Pending")) {
                csvData.add(field);
                
                    
                }
            }
        } catch (IOException e) {
            e.printStackTrace();
            
       } 
        return csvData;
    }
    
 

    //display card
    public void displayp(){
        
        List<String[]> leavep = readleave();
        
        panel.removeAll();
        
        for (String[] leavepanel : leavep) {
            leavepanel leave = new leavepanel();
            
            
            
            //String[] inquiry = unreply.get(i);
            leave.setnm(leavepanel[0]);
            leave.setleave(leavepanel[1]);
            leave.setsdate(leavepanel[2]);
            leave.setedate(leavepanel[3]);
            leave.setduration(leavepanel[4]);
            
            
            //button
            designcomponent.buttonlogin aBut = leave.approveb();
            designcomponent.buttonlogin rBut = leave.rejectb();
            
            aBut.addActionListener(new ActionListener(){
                @Override
                public void actionPerformed(ActionEvent e) {
                    
                    leave.statusa(leavepanel[0], leavepanel[1], leavepanel[2], leavepanel[3], leavepanel[4]);
                    if (leavepanel[1].equalsIgnoreCase("unpaid")){
                        UnpaidLeaveCount(leavepanel[0]);
                    }
                    Notifications.getInstance().show(Notifications.Type.SUCCESS, "Approved");
                    aBut.setEnabled(false);
                    rBut.setEnabled(false);
                    displayp();
                }
                
            });
            
            rBut.addActionListener(new ActionListener(){
                @Override
                public void actionPerformed(ActionEvent e) {
                    
                    leave.statusr(leavepanel[0], leavepanel[1], leavepanel[2], leavepanel[3], leavepanel[4]);
                    Notifications.getInstance().show(Notifications.Type.ERROR, "Rejected");
                    aBut.setEnabled(false);
                    rBut.setEnabled(false);
                    displayp();
                }
                
            });
            
            
            panel.add(leave);
        
        }
            panel.repaint();
        panel.revalidate();
        
        
        
    }
    
    public void UnpaidLeaveCount(String username) {
    String empCsv = "C:\\Users\\acer\\Documents\\NetBeansProjects\\JavaAsg\\src\\csv\\Employees_DetailsCSV.csv";
    
    List<String[]> employees = new ArrayList<>();
    boolean employeeFound = false;

    try (BufferedReader br = new BufferedReader(new FileReader(empCsv))) {
        String line;
        while ((line = br.readLine()) != null) {
            String[] empDetails = line.split(",");
            if (empDetails.length > 4 && empDetails[3].equalsIgnoreCase(username)) {
                // Assuming the unpaid leave count is at index 4 (adjust based on your CSV structure)
                int unpaidLeaveCount = Integer.parseInt(empDetails[33]);
                empDetails[33] = String.valueOf(unpaidLeaveCount + 1);
                employeeFound = true;
            }
            employees.add(empDetails);
        }
    } catch (IOException e) {
        e.printStackTrace();
    }

    if (employeeFound) {
        try (PrintWriter pw = new PrintWriter(new FileWriter(empCsv))) {
            for (String[] emp : employees) {
                String line = String.join(",", emp);
                pw.println(line);
                System.out.println("Updated employee record: " + line); // Debug
            }
            System.out.println("Employee CSV file updated successfully.");
        } catch (IOException e) {
            e.printStackTrace();
        }
    } else {
        System.out.println("Employee not found in CSV.");
    }
}
    
      public void setIconFromCSV() {
        String[] adminDetails = logintest.getuserDetails();

        if (adminDetails != null && adminDetails.length > 0) {
            String iconPath = adminDetails[39];

            if (iconPath != null && !iconPath.isEmpty()) {
                ImageIcon icon = new ImageIcon(iconPath);
                this.setIconImage(icon.getImage());
            }else {
                System.err.println("Icon path is empty or invalid.");
            }
        }
    }
    
    private void seticonmain(){
        ImageAvatar aicon = new ImageAvatar();
        Profile prof = new Profile();
        
        String[] adminDetails = logintest.getuserDetails();

        updateProfilemain(adminDetails[39]);
        
        //String fullName = adminDetails[0] + " " + adminDetails[1];
    
        //adminnm.setText(fullName);
    }
    
     public void updateProfilemain(String imagePath) {
        ImageIcon profileIcon = new ImageIcon(imagePath);
         if (profileIcon.getImage() != null) {
                icon.setImage(profileIcon); 
                revalidate();
                repaint();
            } else {
                System.err.println("Failed to load image from path: " + imagePath);
            }
    }
    
    private void iconMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_iconMouseClicked
       Profiledepart prof = new Profiledepart();
       
       String[] adminDetails = logintest.getuserDetails();
       prof.updateProfileImage(adminDetails[39]);
       prof.setuserprofile(adminDetails[3], adminDetails[4]);
       
       
       
       prof.setVisible(true);
       this.dispose();
        
    }//GEN-LAST:event_iconMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DepartmentMng.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DepartmentMng.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DepartmentMng.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DepartmentMng.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DepartmentMng().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private designcomponent.ImageAvatar icon;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private menunew.Menu menu;
    private javax.swing.JPanel panel;
    // End of variables declaration//GEN-END:variables
}
